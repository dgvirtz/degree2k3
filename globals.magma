//d is the degree of the surface, l the order of transcendental Brauer to compute
d := Lcm(ds); qs := [d div deg: deg in ds]; w := d/&*qs;
Z:=Integers(); Q:=Rationals();
Zd := Integers(d); Z2d := Integers(2*d); Zl := Integers(l);
K<e>:=CyclotomicField(2*d);
O := Integers(K);
Kd<ed> := CyclotomicField(d);
Od := Integers(Kd);
xd := 1-ed;
kd, red := quo<Od|xd>;

//(Z/2d)* and its generators
U2d, res2d:=UnitGroup(Z2d);
cycgens2d := [res2d(U2d.j): j in [1..Ngens(U2d)]];

//(Z/d)*, its generators and induced automorphisms of Kd/Q
Ud, resd:=UnitGroup(Zd);
cycgensd := [resd(Ud.j): j in [1..Ngens(Ud)]];
homsKd := [hom<Kd->Kd|ed^Z!t> : t in cycgensd];

//a polynomial ring for expressing the Stickelberger elements
_<st>:=PolynomialRing(Z);

//the characters chi_a up to permutation
as := &cat[RestrictedPartitions(j*d,4,{1..d-1}): j in [1..3]];
Zfull := Setseq({ga: a in as, g in SymmetricGroup(4)|&and[IsDivisibleBy(ga[k],qs[k]): k in [1..3]] where ga is PermuteSequence(a, g)});
//algebraic values
ZAfull := [a : a in Zfull|&and[&+[x*g mod d: x in a] eq 2*d:g in [1..d-1]|IsCoprime(g,d)]];
PA := [[ed^x: x in a]:a in ZAfull];
//transcendental values
ZTfull := [a: a in Zfull|not a in ZAfull];
PT := [[ed^x: x in a]:a in ZTfull];

b2 := #Zfull+1;
rho := #ZAfull+1;
cork := #ZTfull;
